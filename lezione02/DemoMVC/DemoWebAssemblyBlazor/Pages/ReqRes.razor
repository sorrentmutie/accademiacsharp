@page "/reqres"
@inject IReqResData servizio
@inject IJSRuntime jsRuntime
@using DemoRazorLibrary.Components



<MyModal Id="mioId" Title="Titolo della modale" Content="Esempio di contenuto" OnSave="SalvaModale" OnClose="ChiudiModale" >
</MyModal>


<h3>Pagina dati mock: @Messaggio</h3>

<button @onclick="ApriModale" class="btn btn-danger">Apri Modale </button>

<button @onclick="CancellaRichiesta" class="btn btn-danger">Cancella Richiesta</button>

<button @onclick="VisualizzaForm" class="btn btn-warning">Crea nuovo utente</button>


@if(Dati != null && Dati.data != null)
{
    @foreach(var utente in Dati.data)
    {
        <p>@utente.FirstName @utente.LastName</p>
    }
} 


@if(NuovoUtente != null){

    <Dettaglio TItem="ReqResNewUser" Item="NuovoUtente" OnSalva="CreaNuovoUtente" OnAnnulla="Annulla">
        <CampiDelForm>
            <MyInputText Id="Nome" Label="Nome" @bind-Value="NuovoUtente.name"></MyInputText>
            <MyInputText Id="Job" Label="Job" @bind-Value="NuovoUtente.job"></MyInputText>
            <MyInputDate Id="Date" Label="Birth Date" @bind-Value="NuovoUtente.date"></MyInputDate>
        </CampiDelForm>
    </Dettaglio>
}


@if(Response != null)
{
    <p>@Response.name @Response.job @Response.id @Response.createdAt</p>
}


@code {

    public ReqResData Dati { get; set; } = new ReqResData();
    public string Messaggio { get; set; } = "";
    public ReqResResponse Response { get; set; }
    public ReqResNewUser NuovoUtente { get; set; }

    protected override async Task OnInitializedAsync()
    {
        Dati = await servizio.EstraiDati();
    }

    public void VisualizzaForm()
    {
        NuovoUtente = new ReqResNewUser();
    }

    public void Annulla()
    {
        NuovoUtente = null;
    }

    public void CancellaRichiesta()
    {
        servizio.CancellaRichiesta();
        Messaggio = "Richiesta Cancellata";
    }

    public async Task CreaNuovoUtente(ReqResNewUser nuovoUtente)
    {
        //var nuovoUtente = new ReqResNewUser { job = "Developer", name = "Mario Rossi" };
        Response = await servizio.Crea(nuovoUtente);
        NuovoUtente = null;
    }

    public async Task SalvaModale()
    {
        // Logica per recuperare dati dalla modale
        await jsRuntime.InvokeVoidAsync("nascondiModale");
    }

    public async Task ChiudiModale()
    {
        await jsRuntime.InvokeVoidAsync("nascondiModale");
    }

    public async Task ApriModale()
    {
        await jsRuntime.InvokeVoidAsync("mostraModale", "mioId");
    }

}
